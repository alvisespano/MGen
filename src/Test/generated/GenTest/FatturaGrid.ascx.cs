//
        // UI/WebUserControls [C#]
        // FatturaGrid
        //
        // Generated by Caffettiera
        // (C) 2008 Netical 
        //
        
        using System;
        using System.Data;
        using System.Configuration;
        using System.Web;
        using System.Web.Security;
        using System.Web.UI;
        using System.Web.UI.WebControls;
        using System.Web.UI.WebControls.WebParts;
        using System.Web.UI.HtmlControls;
        using System.Collections.Generic;
        using Obout.Grid;
        using Caffettiera.CSharp.UI.WebUserControls.MVP;
        
        
        namespace WebUserControls.GenTest
        {
        
        public partial class FatturaGridDataObject
        {
            private WebUserControls.GenTest.BOM.Fattura bo;

			protected internal FatturaGridDataObject()
			{
				this.bo = new Fattura();
			}

            protected internal FatturaGridDataObject(WebUserControls.GenTest.BOM.Fattura bo)
            {
                this.bo = bo;
            }

			protected internal FatturaGridDataObject(int uid)
			{
				this.bo = Fattura.RetrieveByUId(uid);
			}

            public int UId
            {
                get { return bo.UId; }
            }

			public static explicit operator Fattura(FatturaGridDataObject dataobject) { return dataobject.bo; }

            public string Intestatario
        {
            get { return bo.Intestatario; }
            set { bo.Intestatario = value; }
        }
        
public int Numero
        {
            get { return bo.Numero; }
            set { bo.Numero = value; }
        }
        
        }
        
public partial class FatturaGridView : GridViewBase<FatturaGridDataObject>
        {
	        public event SelectedEventHandler Selected;

			protected void gridOnSelect(object sender, Obout.Grid.GridRecordEventArgs e)
			{
				if (grid.SelectedRecords != null && grid.SelectedRecords.Count == 1)
				{
					var rowvalues = (Hashtable)grid.SelectedRecords[0];
					var id = Convert.ToInt32(rowvalues["UId"]);
					this.SelectedUId = id;
					if (Selected != null) Selected(this, id);
				}
			}

			protected void gridOnLoad(object sender, EventArgs e)
			{
				int selected = -1;
				if (grid.SelectedRecords != null && grid.SelectedRecords.Count == 1)
				{
					var rowvalues = (Hashtable)grid.SelectedRecords[0];
					selected = Convert.ToInt32(rowvalues["UId"]);
				}

				if (this.SelectedUId > 0)
				{
					if (this.SelectedUId != selected)
					{
						var item = presenter.GetDataObject(this.SelectedUId);
						Hashtable oRecord = new Hashtable();
						oRecord.Add("UId", item.UId);

						// columns initialization
						oRecord.Add("Intestatario", item.Intestatario);
oRecord.Add("Numero", item.Numero);

						grid.SelectedRecords = new ArrayList();
						grid.SelectedRecords.Add(oRecord);
					}
				}
				else
					grid.SelectedRecords = new ArrayList();

				if (grid.DataSource == null) Fill();
			}
        
            protected override IGridPresenter<FatturaGridDataObject> CreatePresenter()
            {
				return new FatturaGridPresenter(this);
            }
           
            public override ICollection<FatturaGridDataObject> DataObjects
            {
                set
                {
                    grid.DataSource = value;
                    grid.DataBind();
                }
            }
        }    
        
public partial class FatturaGridPresenter : GridPresenterBase<FatturaGridDataObject, WebUserControls.GenTest.BOM.Fattura, WebUserControls.GenTest.BOM.Transaction>
		{
			protected internal FatturaGridPresenter(IGridView<FatturaGridDataObject> view) : base(view) {}
			
			protected internal DO GetDataObject(int uid)
			{
				 return WebUserControls.GenTest.BOM.Fattura.RetrieveByUId(uid);
			}	
		}
		
        
        }
        
