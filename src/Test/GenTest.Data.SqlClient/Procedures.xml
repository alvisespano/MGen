<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">GenTest</database>
<procedures>
		
		<procedure owner="dbo" name="Fattura_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the Fattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Intestatario],
					[Descrizione],
					[Data],
					[Numero],
					[ID],
					[ComposedRigaFatturaID],
					[AggregatedRigaFatturaID],
					[AssociatedRigaFatturaID]
				FROM
					[dbo].[Fattura]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Fattura_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Fattura table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				Create Table #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] int 
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[Fattura]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return paged results
				SELECT O.[Intestatario], O.[Descrizione], O.[Data], O.[Numero], O.[ID], O.[ComposedRigaFatturaID], O.[AggregatedRigaFatturaID], O.[AssociatedRigaFatturaID]
				FROM
				    [dbo].[Fattura] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Fattura]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Fattura_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the Fattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Intestatario" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Descrizione" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Data" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Numero" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ComposedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AggregatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AssociatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO [dbo].[Fattura]
					(
					[Intestatario]
					,[Descrizione]
					,[Data]
					,[Numero]
					,[ComposedRigaFatturaID]
					,[AggregatedRigaFatturaID]
					,[AssociatedRigaFatturaID]
					)
				VALUES
					(
					@Intestatario
					,@Descrizione
					,@Data
					,@Numero
					,@ComposedRigaFatturaID
					,@AggregatedRigaFatturaID
					,@AssociatedRigaFatturaID
					)
				
				-- Get the identity value
				SET @ID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Fattura_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the Fattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Intestatario" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Descrizione" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Data" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Numero" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ComposedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AggregatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AssociatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Fattura]
				SET
					[Intestatario] = @Intestatario
					,[Descrizione] = @Descrizione
					,[Data] = @Data
					,[Numero] = @Numero
					,[ComposedRigaFatturaID] = @ComposedRigaFatturaID
					,[AggregatedRigaFatturaID] = @AggregatedRigaFatturaID
					,[AssociatedRigaFatturaID] = @AssociatedRigaFatturaID
				WHERE
[ID] = @ID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Fattura_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the Fattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Fattura] WITH (ROWLOCK) 
				WHERE
					[ID] = @ID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Fattura_GetByComposedRigaFatturaID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Fattura table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ComposedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[Intestatario],
					[Descrizione],
					[Data],
					[Numero],
					[ID],
					[ComposedRigaFatturaID],
					[AggregatedRigaFatturaID],
					[AssociatedRigaFatturaID]
				FROM
					[dbo].[Fattura]
				WHERE
					[ComposedRigaFatturaID] = @ComposedRigaFatturaID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Fattura_GetByAggregatedRigaFatturaID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Fattura table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AggregatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[Intestatario],
					[Descrizione],
					[Data],
					[Numero],
					[ID],
					[ComposedRigaFatturaID],
					[AggregatedRigaFatturaID],
					[AssociatedRigaFatturaID]
				FROM
					[dbo].[Fattura]
				WHERE
					[AggregatedRigaFatturaID] = @AggregatedRigaFatturaID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Fattura_GetByID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Fattura table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Intestatario],
					[Descrizione],
					[Data],
					[Numero],
					[ID],
					[ComposedRigaFatturaID],
					[AggregatedRigaFatturaID],
					[AssociatedRigaFatturaID]
				FROM
					[dbo].[Fattura]
				WHERE
					[ID] = @ID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Fattura_GetByAssociatedRigaFatturaID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the Fattura table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AssociatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Intestatario],
					[Descrizione],
					[Data],
					[Numero],
					[ID],
					[ComposedRigaFatturaID],
					[AggregatedRigaFatturaID],
					[AssociatedRigaFatturaID]
				FROM
					[dbo].[Fattura]
				WHERE
					[AssociatedRigaFatturaID] = @AssociatedRigaFatturaID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Fattura_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the Fattura table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Intestatario" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Descrizione" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Data" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Numero" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ComposedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AggregatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AssociatedRigaFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Intestatario]
	, [Descrizione]
	, [Data]
	, [Numero]
	, [ID]
	, [ComposedRigaFatturaID]
	, [AggregatedRigaFatturaID]
	, [AssociatedRigaFatturaID]
    FROM
	[dbo].[Fattura]
    WHERE 
	 ([Intestatario] = @Intestatario OR @Intestatario is null)
	AND ([Descrizione] = @Descrizione OR @Descrizione is null)
	AND ([Data] = @Data OR @Data is null)
	AND ([Numero] = @Numero OR @Numero is null)
	AND ([ID] = @ID OR @ID is null)
	AND ([ComposedRigaFatturaID] = @ComposedRigaFatturaID OR @ComposedRigaFatturaID is null)
	AND ([AggregatedRigaFatturaID] = @AggregatedRigaFatturaID OR @AggregatedRigaFatturaID is null)
	AND ([AssociatedRigaFatturaID] = @AssociatedRigaFatturaID OR @AssociatedRigaFatturaID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Intestatario]
	, [Descrizione]
	, [Data]
	, [Numero]
	, [ID]
	, [ComposedRigaFatturaID]
	, [AggregatedRigaFatturaID]
	, [AssociatedRigaFatturaID]
    FROM
	[dbo].[Fattura]
    WHERE 
	 ([Intestatario] = @Intestatario AND @Intestatario is not null)
	OR ([Descrizione] = @Descrizione AND @Descrizione is not null)
	OR ([Data] = @Data AND @Data is not null)
	OR ([Numero] = @Numero AND @Numero is not null)
	OR ([ID] = @ID AND @ID is not null)
	OR ([ComposedRigaFatturaID] = @ComposedRigaFatturaID AND @ComposedRigaFatturaID is not null)
	OR ([AggregatedRigaFatturaID] = @AggregatedRigaFatturaID AND @AggregatedRigaFatturaID is not null)
	OR ([AssociatedRigaFatturaID] = @AssociatedRigaFatturaID AND @AssociatedRigaFatturaID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Fattura_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the Fattura table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				Create Table #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[Fattura] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[Intestatario], O.[Descrizione], O.[Data], O.[Numero], O.[ID], O.[ComposedRigaFatturaID], O.[AggregatedRigaFatturaID], O.[AssociatedRigaFatturaID]
				FROM
				    [dbo].[Fattura] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				select count(*) as TotalRowCount from [dbo].[Fattura] {0};
			
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="RigaFattura_Get_List" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets all records from the RigaFattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Descrizione],
					[Importo],
					[ID],
					[ComposedFatturaID],
					[AggregatedFatturaID],
					[AssociatedFatturaID]
				FROM
					[dbo].[RigaFattura]
					
				Select @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="RigaFattura_GetPaged" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the RigaFattura table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				-- Create a temp table to store the select results
				Create Table #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] int 
				)
				
				-- Insert into the temp table
				declare @SQL as nvarchar(4000)
				SET @SQL = 'INSERT INTO #PageIndex ([ID])'
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + convert(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' [ID]'
				SET @SQL = @SQL + ' FROM [dbo].[RigaFattura]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				IF LEN(@OrderBy) > 0
				BEGIN
					SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				END
				
				-- Populate the temp table
				exec sp_executesql @SQL

				-- Return paged results
				SELECT O.[Descrizione], O.[Importo], O.[ID], O.[ComposedFatturaID], O.[AggregatedFatturaID], O.[AssociatedFatturaID]
				FROM
				    [dbo].[RigaFattura] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > @PageLowerBound
					AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				
				-- get row count
				SET @SQL = 'SELECT COUNT(*) as TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[RigaFattura]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				exec sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="RigaFattura_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Inserts a record into the RigaFattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Descrizione" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Importo" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ID" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ComposedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AggregatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AssociatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
					
				INSERT INTO [dbo].[RigaFattura]
					(
					[Descrizione]
					,[Importo]
					,[ComposedFatturaID]
					,[AggregatedFatturaID]
					,[AssociatedFatturaID]
					)
				VALUES
					(
					@Descrizione
					,@Importo
					,@ComposedFatturaID
					,@AggregatedFatturaID
					,@AssociatedFatturaID
					)
				
				-- Get the identity value
				SET @ID = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RigaFattura_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Updates a record in the RigaFattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Descrizione" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Importo" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault=""/>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@ComposedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AggregatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@AssociatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[RigaFattura]
				SET
					[Descrizione] = @Descrizione
					,[Importo] = @Importo
					,[ComposedFatturaID] = @ComposedFatturaID
					,[AggregatedFatturaID] = @AggregatedFatturaID
					,[AssociatedFatturaID] = @AssociatedFatturaID
				WHERE
[ID] = @ID 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RigaFattura_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Deletes a record in the RigaFattura table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[RigaFattura] WITH (ROWLOCK) 
				WHERE
					[ID] = @ID
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RigaFattura_GetByComposedFatturaID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RigaFattura table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ComposedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[Descrizione],
					[Importo],
					[ID],
					[ComposedFatturaID],
					[AggregatedFatturaID],
					[AssociatedFatturaID]
				FROM
					[dbo].[RigaFattura]
				WHERE
					[ComposedFatturaID] = @ComposedFatturaID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RigaFattura_GetByAggregatedFatturaID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RigaFattura table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AggregatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[Descrizione],
					[Importo],
					[ID],
					[ComposedFatturaID],
					[AggregatedFatturaID],
					[AssociatedFatturaID]
				FROM
					[dbo].[RigaFattura]
				WHERE
					[AggregatedFatturaID] = @AggregatedFatturaID
				
				Select @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="RigaFattura_GetByID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RigaFattura table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Descrizione],
					[Importo],
					[ID],
					[ComposedFatturaID],
					[AggregatedFatturaID],
					[AssociatedFatturaID]
				FROM
					[dbo].[RigaFattura]
				WHERE
					[ID] = @ID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="RigaFattura_GetByAssociatedFatturaID" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Select records from the RigaFattura table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@AssociatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Descrizione],
					[Importo],
					[ID],
					[ComposedFatturaID],
					[AggregatedFatturaID],
					[AssociatedFatturaID]
				FROM
					[dbo].[RigaFattura]
				WHERE
					[AssociatedFatturaID] = @AssociatedFatturaID
			Select @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="RigaFattura_Find" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Finds records in the RigaFattura table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Descrizione" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Importo" type="float" direction="Input" size="8" precision="53" scale="0" param="" nulldefault="null"/>
				<parameter name="@ID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@ComposedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AggregatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@AssociatedFatturaID" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Descrizione]
	, [Importo]
	, [ID]
	, [ComposedFatturaID]
	, [AggregatedFatturaID]
	, [AssociatedFatturaID]
    FROM
	[dbo].[RigaFattura]
    WHERE 
	 ([Descrizione] = @Descrizione OR @Descrizione is null)
	AND ([Importo] = @Importo OR @Importo is null)
	AND ([ID] = @ID OR @ID is null)
	AND ([ComposedFatturaID] = @ComposedFatturaID OR @ComposedFatturaID is null)
	AND ([AggregatedFatturaID] = @AggregatedFatturaID OR @AggregatedFatturaID is null)
	AND ([AssociatedFatturaID] = @AssociatedFatturaID OR @AssociatedFatturaID is null)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Descrizione]
	, [Importo]
	, [ID]
	, [ComposedFatturaID]
	, [AggregatedFatturaID]
	, [AssociatedFatturaID]
    FROM
	[dbo].[RigaFattura]
    WHERE 
	 ([Descrizione] = @Descrizione AND @Descrizione is not null)
	OR ([Importo] = @Importo AND @Importo is not null)
	OR ([ID] = @ID AND @ID is not null)
	OR ([ComposedFatturaID] = @ComposedFatturaID AND @ComposedFatturaID is not null)
	OR ([AggregatedFatturaID] = @AggregatedFatturaID AND @AggregatedFatturaID is not null)
	OR ([AssociatedFatturaID] = @AssociatedFatturaID AND @AssociatedFatturaID is not null)
	Select @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="RigaFattura_Find_Dynamic" grant="" skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By:  ()
-- Purpose: Gets records from the RigaFattura table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				-- Create a temp table to store the select results
				Create Table #PageIndex
				(
				    [IndexId] int IDENTITY (1, 1) NOT NULL,
				    [ID] int 
				)
				
				-- Insert into the temp table
				INSERT INTO #PageIndex ( [ID] )
				SELECT TOP {3} [ID]
				FROM [dbo].[RigaFattura] {0}
				ORDER BY {1}
				
				-- Return paged results
				SELECT O.[Descrizione], O.[Importo], O.[ID], O.[ComposedFatturaID], O.[AggregatedFatturaID], O.[AssociatedFatturaID]
				FROM
				    [dbo].[RigaFattura] O,
				    #PageIndex PageIndex
				WHERE
				    PageIndex.IndexId > {2}
				    AND O.[ID] = PageIndex.[ID]
				ORDER BY
				    PageIndex.IndexId
				

				-- get total count
				select count(*) as TotalRowCount from [dbo].[RigaFattura] {0};
			
				END
			]]></body>
		</procedure>
		
</procedures>
</root>
