 
%{

open Caffettiera.FSharp.Generator.Tyabsyn

%}

%token <string> ID
%token <System.Int32> NAT
%token ABRA AKET SQBRA SQKET STRING INT BOOL FLOAT DATETIME CHAR BO BOA COLON VOID EOF

%start simple
%start complex
%start ret

%type < simple > simple
%type < complex > complex
%type < ret > ret

%%

simple:
	simplety EOF					{ $1 }

complex:
	complexty EOF					{ $1 }

ret:
	retty EOF						{ $1 }

simplety:
    STRING							{ String None }
  | STRING SQBRA NAT SQKET			{ if $3 > 0 then String (Some $3) else raise (ParseError "variable string length cannot be zero") }
  | INT								{ Int }
  | BOOL							{ Bool }
  | FLOAT							{ Float }
  | CHAR							{ Char }
  | DATETIME						{ Datetime }
  |	ID								{ Verbatim $1 }
  
complexty:
  | special COLON ID				{ Special ($1, $3) }
  | ID ABRA complexty AKET			{ App ($1, $3) }
  | simplety						{ Simple $1 }
	
special:
	BO								{ Bo }
  | BOA								{ Boa } 

retty:
	VOID							{ Void }
  | complexty						{ Complex $1 }